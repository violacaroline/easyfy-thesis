@rendermode InteractiveServer
@using System.Net.Http
@using System.Net.Http.Json
@using Newtonsoft.Json
@inject ProductDescriptionService ProductDescriptionService


<div>
    <TextInput Label="Product Name:" @bind-Value="productName" />
    <TextArea Label="Product Attributes:" @bind-Value="keywords" />
</div>

<br>

<div>
    <button @onclick="OutputText">Generate Description</button>
    <LoadingSpinner IsVisible="@isLoading" />
    @if (!isLoading)
    {
        <p role="status">@textToOutput</p>
    }
</div>


@code {
    private string? textToOutput;
    private string? keywords = "";
    private string? productName = "";
    private bool isLoading = false;

    /// <summary>
    /// Makes request to generate description.
    /// </summary>
    /// <returns></returns>
    private async Task OutputText()
    {
        isLoading = true;
        try
        {
             textToOutput = await ProductDescriptionService.GenerateProductDescriptionAsync(
                    productName ?? string.Empty,
                    keywords ?? string.Empty);
        }
        finally
        {
            isLoading = false;
        }
    }
}
