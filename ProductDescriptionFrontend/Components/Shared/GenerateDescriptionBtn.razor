@rendermode InteractiveServer
@using ProductDescriptionFrontend
@using System.Net.Http
@using System.Net.Http.Json


<button class="btn btn-primary" @onclick="OutputText">Generate Description</button>

<p role="status">@textToOutput</p>

@code {
    private HttpResponseMessage apiResponse;
    private string textToOutput;
    private HttpClient httpClient;

    protected override void OnInitialized()
    {
        httpClient = new HttpClient();
    }

    /// <summary>
    /// Makes request to generate description.
    /// </summary>
    /// <returns></returns>
   private async Task OutputText()
{
    try
    {
        Console.WriteLine("OutputText method called");

        var response = await httpClient.PostAsJsonAsync("http://localhost:5000/product-description/generate", new {});
        Console.WriteLine(response);
        if (response.IsSuccessStatusCode)
        {
            var apiResponse = await response.Content.ReadFromJsonAsync<ApiResponse>();
                 Console.WriteLine();

            textToOutput = apiResponse?.Response ?? "No response";
            
        }
        else
        {
            var errorContent = await response.Content.ReadAsStringAsync();
            Console.WriteLine($"Error content: {errorContent}");
            textToOutput = "Error: " + response.ReasonPhrase + " - " + errorContent;
        }
    }
    catch (HttpRequestException ex)
    {
        Console.WriteLine($"Error: {ex.Message}");
        textToOutput = "Request failed: " + ex.Message;
    }
}


}
